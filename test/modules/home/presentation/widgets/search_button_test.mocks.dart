// Mocks generated by Mockito 5.4.4 from annotations
// in pokedex_clean_arch/test/modules/home/presentation/widgets/search_button_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mobx/mobx.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex_clean_arch/core/enum/api_request_state.dart' as _i5;
import 'package:pokedex_clean_arch/core/failures/failure.dart' as _i7;
import 'package:pokedex_clean_arch/modules/home/domain/entities/pokemon_entity.dart'
    as _i8;
import 'package:pokedex_clean_arch/modules/home/presentation/store/search_pokemon_store.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeReactiveContext_0 extends _i1.SmartFake
    implements _i2.ReactiveContext {
  _FakeReactiveContext_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SearchPokemonStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchPokemonStore extends _i1.Mock
    implements _i4.SearchPokemonStore {
  MockSearchPokemonStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.ApiRequestState get apiRequestState => (super.noSuchMethod(
        Invocation.getter(#apiRequestState),
        returnValue: _i5.ApiRequestState.initial,
      ) as _i5.ApiRequestState);

  @override
  set apiRequestState(_i5.ApiRequestState? value) => super.noSuchMethod(
        Invocation.setter(
          #apiRequestState,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_0(
          this,
          Invocation.getter(#context),
        ),
      ) as _i2.ReactiveContext);

  @override
  _i6.Future<_i3.Either<_i7.Failure, _i8.PokemonEntity>> getPokemon(
          String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemon,
          [name],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, _i8.PokemonEntity>>.value(
                _FakeEither_1<_i7.Failure, _i8.PokemonEntity>(
          this,
          Invocation.method(
            #getPokemon,
            [name],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, _i8.PokemonEntity>>);
}
